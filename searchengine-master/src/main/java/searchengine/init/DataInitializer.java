package searchengine.init;

import java.sql.Timestamp;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.boot.CommandLineRunner;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.simple.SimpleJdbcInsert;
import org.springframework.stereotype.Component;

import searchengine.config.SitesList;

@Component
public class DataInitializer implements CommandLineRunner {

    private static final Logger logger = LoggerFactory.getLogger(DataInitializer.class);

    private final SitesList sitesList;
    private final JdbcTemplate jdbcTemplate;

    public DataInitializer(SitesList sitesList, JdbcTemplate jdbcTemplate) {
        this.sitesList = sitesList;
        this.jdbcTemplate = jdbcTemplate;
    }

    @Override
    public void run(String... args) {
        logger.info("üöÄ DataInitializer –∑–∞–ø—É—â–µ–Ω! –ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö...");

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ site
        long count = jdbcTemplate.queryForObject("SELECT COUNT(*) FROM site", Long.class);
        logger.info("üìä –í —Ç–∞–±–ª–∏—Ü–µ site –Ω–∞–π–¥–µ–Ω–æ {} –∑–∞–ø–∏—Å–µ–π.", count);

        if (count > 0) {
            logger.info("‚úÖ –¢–∞–±–ª–∏—Ü–∞ site —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.");
            return;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–∏—Å–æ–∫ —Å–∞–π—Ç–æ–≤ –≤ YAML
        List<searchengine.config.Site> configSites = sitesList.getSites();
        if (configSites == null || configSites.isEmpty()) {
            logger.warn("‚ö†Ô∏è –°–ø–∏—Å–æ–∫ —Å–∞–π—Ç–æ–≤ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—É—Å—Ç. –ó–∞–≤–µ—Ä—à–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é.");
            return;
        }

        logger.info("üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–∞–π—Ç—ã –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...");
        configSites.forEach(configSite ->
            logger.info("üåç –°–∞–π—Ç: Name='{}', URL='{}'", configSite.getName(), configSite.getUrl())
        );

        // –°–æ–∑–¥–∞–µ–º SimpleJdbcInsert –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã site
        SimpleJdbcInsert jdbcInsert = new SimpleJdbcInsert(jdbcTemplate)
                .withTableName("site")
                .usingGeneratedKeyColumns("id");

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∂–¥—ã–π —Å–∞–π—Ç –Ω–∞–ø—Ä—è–º—É—é –≤ –ë–î
        for (searchengine.config.Site configSite : configSites) {
            Map<String, Object> parameters = new HashMap<>();
            parameters.put("url", configSite.getUrl());
            parameters.put("name", configSite.getName());
            parameters.put("status", "INDEXING"); // –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
            parameters.put("status_time", new Timestamp(System.currentTimeMillis()));
            parameters.put("last_error", "");

            try {
                Number id = jdbcInsert.executeAndReturnKey(parameters);
                logger.info("‚úÖ –°–∞–π—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ID={}, Name='{}', URL='{}'",
                        id, configSite.getName(), configSite.getUrl());
            } catch (Exception e) {
                logger.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–∞–π—Ç–∞ {}: {}", configSite.getUrl(), e.getMessage(), e);
            }
        }

        logger.info("‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞.");
    }
}

